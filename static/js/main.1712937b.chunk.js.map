{"version":3,"sources":["components/AddButton.tsx","App.tsx","index.tsx"],"names":["AddButton","good","isSelected","handleGoodToggle","type","onClick","className","cn","goods","App","useState","selectedGood","setSelectedGood","handleRemoveGood","isGoodSelected","map","ReactDOM","render","document","getElementById"],"mappings":"kPASaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBAEA,OACE,wBACE,UAASD,EACL,eACA,YACJE,KAAK,SACLC,QAAS,kBAAMF,EAAiBF,EAAMC,IACtCI,UAAWC,IACT,SACA,CACE,UAAWL,IATjB,SAaGA,EACG,IACA,OCxBGM,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAU,WACrB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAmB,kBAAMD,EAAgB,KACzCT,EAAmB,SAACF,EAAca,GAClCA,EACFD,IAEAD,EAAgBX,IAIpB,OACE,uBAAMK,UAAU,oBAAhB,UACIK,EACA,qBAAIL,UAAU,sCAAd,oBACMK,EADN,gBAIE,wBACE,UAAQ,cACRP,KAAK,SACLE,UAAU,cACVD,QAASQ,OAIb,oBAAIP,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGE,EAAMO,KAAI,SAAAd,GACT,IAAMa,EAAiBb,IAASU,EAEhC,OACE,qBAEE,UAAQ,OACRL,UAAWC,IAAG,CACZ,+BAAgCO,IAJpC,UAOE,6BACE,cAAC,EAAD,CACEb,KAAMA,EACNC,WAAYY,EACZX,iBAAkBA,MAItB,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGL,MAfEA,cCrDrBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1712937b.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  good: string,\n  isSelected: boolean,\n  handleGoodToggle: (good: string, isSelected: boolean) => void,\n};\n\nexport const AddButton: FC<Props> = ({\n  good,\n  isSelected,\n  handleGoodToggle,\n}) => {\n  return (\n    <button\n      data-cy={isSelected\n        ? 'RemoveButton'\n        : 'AddButton'}\n      type=\"button\"\n      onClick={() => handleGoodToggle(good, isSelected)}\n      className={cn(\n        'button',\n        {\n          'is-info': isSelected,\n        },\n      )}\n    >\n      {isSelected\n        ? '-'\n        : '+'}\n    </button>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { AddButton } from './components/AddButton';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: FC = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n\n  const handleRemoveGood = () => setSelectedGood('');\n  const handleGoodToggle = (good: string, isGoodSelected: boolean): void => {\n    if (isGoodSelected) {\n      handleRemoveGood();\n    } else {\n      setSelectedGood(good);\n    }\n  };\n\n  return (\n    <main className=\"section container\">\n      { selectedGood ? (\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood} is selected`}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={handleRemoveGood}\n          />\n        </h1>\n      ) : (\n        <h1 className=\"title\">No goods selected</h1>\n      ) }\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => {\n            const isGoodSelected = good === selectedGood;\n\n            return (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={cn({\n                  'has-background-success-light': isGoodSelected,\n                })}\n              >\n                <td>\n                  <AddButton\n                    good={good}\n                    isSelected={isGoodSelected}\n                    handleGoodToggle={handleGoodToggle}\n                  />\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}